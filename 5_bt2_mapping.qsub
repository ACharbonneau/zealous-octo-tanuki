#!/bin/sh -login
#PBS -j oe
#PBS -l nodes=1:ppn=2,walltime=4:00:00,mem=10gb
#PBS -m a
#PBS -r n
#PBS -t 0-34

# -o : tells it where to put output from your job
# -j oe : specifies that output and error messages from your job can be placed in the same location
# -l : resource requests (maximum amounts needed for each)
# -M : email address to send status updates to
# -m abe : what to send email updates about (abort, begin, end)
# -N : names your job
# -r n : tells it not to re-run the script in the case of an error (so it doesn't overwrite any results generated$
# -t 0-? : job numbers for array submission

cd ${PBS_O_WORKDIR} || exit #Go to directory with sequencing files


filelist=(*fastq.edit) #Get a list of all sequencing files


indiv=${filelist[${PBS_ARRAYID}]} #assign indiv to be current sequence file

PBS_JOBNAME=${PBS_JOBNAME}_${indiv} #rename job to job_indiv

cd ${PBS_O_WORKDIR}/${bsname}

module load bowtie2/2.2.6


#Then launch metadata collector
rc=$?

if [[ $rc = 0 ]] 
then qsub ../scripts/echo.qsub -N ${PBS_JOBNAME}.metadata -v genome="${genome}",index="${index}",gff="${gff}",bsname="${PBS_JOBNAME}",gffi="${gffi}",exon="${exon}"
fi 
#Run bowtie2

# Using default mode: search for multiple alignments, report the best one
#--sensitive-local      -D 15 -R 2 -N 0 -L 20 -i S,1,0.75 (default)
#  -D <int>           give up extending after <int> failed extends in a row (15)
# -R <int>           for reads w/ repetitive seeds, try <int> sets of seeds (2)
# -N <int>           max # mismatches in seed alignment; can be 0 or 1 (0)
# -L <int>           length of seed substrings; must be >3, <32 (22)
#-i <func>          interval between seed substrings w/r/t read len (S,1,1.15)

echo bsname="${PBS_JOBNAME}"
bowtie2 --local -p 2 -D 15 -R 2 -N 0 -L 20 -i S,1,0.75 -x ${index} -U ../${indiv} -S ${PBS_JOBNAME}.sam

#--sensitive            -D 15 -R 2 -N 0 -L 22 -i S,1,1.15 (default)


folder=`pwd`
folder=`basename $folder`


if [ ! -f ${folder}.map-${PBS_ARRAYID}_*.fastq.edit.sam ]
then qsub ../scripts/5_bt2_mapping.qsub -t ${PBS_ARRAYID} -N ${folder} -v genome="${genome}",index="${index}",gff="${gff}",bsname="${PBS_JOBNAME}",indiv="${indiv}",job="${PBS_JOBNAME}",gffi="${gffi}",exon="${exon}",stranded="${stranded}"
fi


#Launch samtools
#cd ${bsname}


if [ ! ${folder}.map-${PBS_ARRAYID}_*.fastq.edit.sam ]
then qsub ../scripts/6_view_samtools.qsub -N ${bsname}.samtools -v genome="${genome}",index="${index}",gff="${gff}",bsname="${PBS_JOBNAME}",indiv="${indiv}",job="${PBS_JOBNAME}",gffi="${gffi}",exon="${exon}",stranded="${stranded}"
fi