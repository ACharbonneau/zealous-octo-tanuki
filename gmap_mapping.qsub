#!/bin/sh -login
#PBS -j oe
#PBS -l nodes=1:ppn=2,walltime=6:00:00,mem=10gb
#PBS -m a
#PBS -r n
#PBS -t 0-34
#PBS -l feature='intel16'

# -o : tells it where to put output from your job
# -j oe : specifies that output and error messages from your job can be placed in the same location
# -l : resource requests (maximum amounts needed for each)
# -M : email address to send status updates to
# -m abe : what to send email updates about (abort, begin, end)
# -N : names your job
# -r n : tells it not to re-run the script in the case of an error (so it doesn't overwrite any results generated$
# -t 0-? : job numbers for array submission

source ~/.bash_profile

cd ${PBS_O_WORKDIR} || exit #Go to directory with sequencing files


filelist=(*fastq.edit) #Get a list of all sequencing files


indiv=${filelist[${PBS_ARRAYID}]} #assign indiv to be current sequence file

NEW_JOBNAME=${PBS_JOBNAME}_${indiv} #rename job to job_indiv

cd ${PBS_O_WORKDIR}/${bsname}

echo bsname="${NEW_JOBNAME}"

folder=`pwd`
folder=`basename $folder`


if [ ! -f ${NEW_JOBNAME}.sam ]
then gsnap -d ${index} --force-single-end ../${indiv} -k 15 -A sam -N 1 -O -n 1 -Q --nofails -o ${NEW_JOBNAME}.sam
fi




if [ ! -f ${NEW_JOBNAME}.sam ]
then qsub ../zealous-octo-tanuki/gmap_mapping.qsub -t ${PBS_ARRAYID} -N ${folder}.map -v genome="${genome}",index="${index}",gff="${gff}",bsname="${PBS_JOBNAME}",indiv="${indiv}",job="${NEW_JOBNAME}",gffi="${gffi}",exon="${exon}",stranded="${stranded}"
fi



#Launch samtools



if [ -f ${NEW_JOBNAME}.sam ] 
then qsub ../zealous-octo-tanuki/view_samtools.qsub -N ${bsname}.samtools -v genome="${genome}",index="${index}",gff="${gff}",bsname="${NEW_JOBNAME}",indiv="${indiv}",job="${NEW_JOBNAME}",gffi="${gffi}",exon="${exon}",stranded="${stranded}"
fi